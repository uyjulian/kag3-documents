<?xml version="1.0" encoding="Shift_JIS" ?>
<doc>
<title>デバッグをしよう</title>

<para>
<ptitle>デバッグ支援機能</ptitle>
　吉里吉里本体が提供するもの、KAG が提供するものなどを含めて、いくつかのデバッグ支援機能があります。<r/>
</para>

<para>
<ptitle>デバッグメニュー</ptitle>
　Config.tjs の <tt>debugMenu.visible</tt> を true にすると、「デバッグ」メニューが表示されるようになります。このメニューの項目を説明します。<r/>
<dl>
<dt><kw>シナリオの再読込み</kw></dt>
<dd>
　現在のシナリオファイルを再読込します。直前に通過した「セーブ可能なラベル」から再び実行が始まります。致命的なバグが発生したあとなどは正常に再読込ができない場合もあります。
</dd>
<dt><kw>コントローラ</kw></dt>
<dd>
　吉里吉里本体の「コントローラ」を表示します。Shift+F1 でも表示できます。このコントローラに並んでいるボタンのうち、一番右側の赤い●に×の付いたマークを押すと吉里吉里を終了することができます ( 致命的なバグの後はまれに終了できない場合があります ) 。
</dd>
<dt>コンソール</dt>
<dd>
　コンソール ( 後述 ) を表示します。
</dd>
</dl>
</para>

<para>
<ptitle>コンソール</ptitle>
　コンソールは、吉里吉里や KAG の出力するメッセージが次々と表示される場所です。Shift+F4 などで表示できます。なにかトラブルが起こった場合、このコンソールに問題の解決につながる情報が表示される場合があります。<r/>
<r/>
　また、コンソールの下部には入力欄があり、任意の TJS 式をその場で実行し、結果を確認することができます。<r/>
<r/>
　たとえば、<tt>f.flag</tt> という変数の内容を確認したい場合、コンソールに<r/>
<bq>
f.flag<r/>
</bq>
　と入力して enter キーを押すと、コンソールに<r/>
<bq>
15:25:04 コンソール : f.flag = (int)1<r/>
</bq>
　などと表示されます ( これは例 )。このように変数の内容をその場で確認することができます。<r/>
<note>
　値の前に表示される (int) は、この値が整数であることを示しています。同様に、(real) は実数、(string) は文字列を表します。(void) は変数が未定義か、void そのものが代入されていることを示します。<r/>
</note>
<r/>
　また、<tt>f.flag</tt> に 0 を代入したければ、<r/>
<bq>
f.flag=0<r/>
</bq>
　と入力して enter キーを押せば、その時点で f.flag に 0 を代入することができます。<r/>
<note>
　コンソールは、吉里吉里１では Debug Message Stream ( DMS ) と呼ばれていたものです。
</note>
</para>

<para>
<ptitle>そのほかのデバッグ手段</ptitle>
　<kw>trace</kw> タグは、変数の内容をコンソールに出力するタグです。<r/>
　プログラムの応答がなくなった場合、<tt>Ctrl + Alt + F12</tt> を２秒間以上押し続ける事で吉里吉里本体を強制的に終了できる場合があります。<r/>
</para>

</doc>

